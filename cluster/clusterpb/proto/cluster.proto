syntax = "proto3";
package clusterpb;
option go_package = "/clusterpb";

message MemberInfo {
    string label = 1;
    string serviceAddr = 2;
    repeated string services = 3;
}

message RegisterRequest {
    MemberInfo memberInfo = 1;
}

message RegisterResponse {
    repeated MemberInfo members = 1;
}

message UnregisterRequest {
    string serviceAddr = 1;
}

message UnregisterResponse {}

message HeartbeatRequest {
    MemberInfo memberInfo = 1;
}

message HeartbeatResponse {
}

service Master {
    rpc Register (RegisterRequest) returns (RegisterResponse) {}
    rpc Unregister (UnregisterRequest) returns (UnregisterResponse) {}
    rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse) {}
}

message RequestMessage {
    string gateAddr = 1;
    int64 sessionId = 2;
    uint64 id = 3;
    string route = 4;
    bytes data = 5;
    int64 uId=6;
}

message NotifyMessage {
    string gateAddr = 1;
    int64 sessionId = 2;
    // map<int64,string> sessions = 3;
    string route = 4;
    bytes data = 5;
    int64 uId=6;
}


message RPCMessage {
    string gateAddr = 1;
    int64 sessionId = 2;
    map<int64,string> sessions = 3;
    string route = 4;
    bytes data = 5;
    int64 uId=6;
}




message ResponseMessage {
    int64 sessionId = 1;
    uint64 id = 2;
    bytes data = 3;
}

message PushMessage {
    int64 sessionId = 1;
    string route = 2;
    bytes data = 3;
}

message MemberHandleResponse {}

message NewMemberRequest {
    MemberInfo memberInfo = 1;
}

message NewMemberResponse {}

message DelMemberRequest {
    string serviceAddr = 1;
}

message DelMemberResponse {}

message SessionClosedRequest {
    int64 sessionId = 1;
    int64 uId = 2;
}

message SessionClosedResponse {}

message CloseSessionRequest {
    int64 sessionId = 1;
}

message CloseSessionResponse {}


message KickRequest {
    // 批量踢人
    repeated int64 uIds = 1;
    int32 type=2;
}

message KickResponse {}

message SwithModeRequest {
    //  0 为正常模式  1 为维护模式
    uint32 mode=1;
}

message  SwithModeResponse {}


service Member {
    rpc HandleRequest (RequestMessage) returns (MemberHandleResponse) {}
    rpc HandleNotify (NotifyMessage) returns (MemberHandleResponse) {}
    rpc HandleRPC (RPCMessage) returns (MemberHandleResponse) {}
    rpc HandlePush (PushMessage) returns (MemberHandleResponse) {}
    rpc HandleResponse (ResponseMessage) returns (MemberHandleResponse) {}
    rpc NewMember (NewMemberRequest) returns (NewMemberResponse) {}
    rpc DelMember (DelMemberRequest) returns (DelMemberResponse) {}
    rpc SessionClosed(SessionClosedRequest) returns(SessionClosedResponse) {}
    rpc CloseSession(CloseSessionRequest) returns(CloseSessionResponse) {}
    rpc Kick(KickRequest) returns(KickResponse) {}
    rpc SwithMode(SwithModeRequest) returns(SwithModeResponse) {}
}